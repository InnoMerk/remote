; generated by Component: ARM Compiler 5.04 update 1 (build 49) Tool: ArmCC [5040049]
; commandline ArmCC [--c99 --list --debug -c --asm --interleave -o.\hooks.o --asm_dir=.\ --list_dir=.\ --depend=.\hooks.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\hooks -I..\lcd -I..\led -I..\load_cpu -I..\main -I..\printf -I..\limit_switch -I..\control_task -I..\mode_task -I..\lcdTask -I..\hit -I..\move_task -I..\project -I..\..\rtos -I..\..\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\STM32F10x_StdPeriph_Driver\inc -I..\..\STM32F10x_StdPeriph_Driver\src -I"C:\Program Files\keil\ARM\RV31\INC" -I"C:\Program Files\keil\ARM\PACK\ARM\CMSIS\3.20.4\CMSIS\Include" -I"C:\Program Files\keil\ARM\PACK\Keil\STM32F1xx_DFP\1.0.5\Device\Include" -DSTM32F10X_MD_VL -DUSE_STDPERIPH_DRIVER --omf_browse=.\hooks.crf ..\hooks\hooks.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_x
                          REQUIRE _printf_s
                          REQUIRE _printf_longlong_hex
                          REQUIRE _printf_str
                  GetCPU_IDLE PROC
;;;9      //---------------------------------
;;;10     uint8_t  GetCPU_IDLE(void) {
000000  4813              LDR      r0,|L1.80|
;;;11             return CPU_IDLE;
000002  7800              LDRB     r0,[r0,#0]  ; CPU_IDLE
;;;12     }
000004  4770              BX       lr
;;;13     
                          ENDP

                  vApplicationIdleHook PROC
;;;14         
;;;15     void vApplicationIdleHook( void )
000006  b510              PUSH     {r4,lr}
;;;16     		{
;;;17     		
;;;18     			static portTickType LastTick; 
;;;19           static uint32_t count;             
;;;20           static uint32_t max_count=144824 ;                
;;;21     
;;;22             count++;                                                 
000008  4c11              LDR      r4,|L1.80|
00000a  68a0              LDR      r0,[r4,#8]  ; count
00000c  1c40              ADDS     r0,r0,#1
;;;23           
;;;24             if((xTaskGetTickCount() - LastTick  ) > 1000)    
00000e  60a0              STR      r0,[r4,#8]  ; count
000010  f7fffffe          BL       xTaskGetTickCount
000014  6861              LDR      r1,[r4,#4]  ; LastTick
000016  1a40              SUBS     r0,r0,r1
000018  f5b07f7a          CMP      r0,#0x3e8
00001c  d90f              BLS      |L1.62|
;;;25     					{ 
;;;26                     LastTick = xTaskGetTickCount();
00001e  f7fffffe          BL       xTaskGetTickCount
000022  6060              STR      r0,[r4,#4]  ; LastTick
000024  e9d40102          LDRD     r0,r1,[r4,#8]
;;;27                     if(count > max_count) max_count = count;         
000028  4288              CMP      r0,r1
00002a  d900              BLS      |L1.46|
00002c  60e0              STR      r0,[r4,#0xc]  ; max_count
                  |L1.46|
;;;28                     CPU_IDLE = 100 * count / max_count;               
00002e  2164              MOVS     r1,#0x64
000030  4348              MULS     r0,r1,r0
000032  68e1              LDR      r1,[r4,#0xc]  ; max_count
000034  fbb0f0f1          UDIV     r0,r0,r1
000038  7020              STRB     r0,[r4,#0]
;;;29                     count = 0; 
00003a  2000              MOVS     r0,#0
00003c  60a0              STR      r0,[r4,#8]  ; count
                  |L1.62|
;;;30     				#ifdef DEBUG
;;;31     				  // printf("\r\n cpu= %d",100-CPU_IDLE);
;;;32     					// printf("\r\n max_count= %d",max_count);
;;;33     				#endif
;;;34     						
;;;35     					}//if
;;;36     	}
00003e  bd10              POP      {r4,pc}
;;;37     		/*******************************************************************/
                          ENDP

                  vApplicationMallocFailedHook PROC
                  |L1.64|
;;;38     		void vApplicationMallocFailedHook( void )
000040  e7fe              B        |L1.64|
;;;39     		{
;;;40     				for( ;; );
;;;41     		}
;;;42     		/*******************************************************************/
                          ENDP

                  vApplicationStackOverflowHook PROC
;;;43     		void vApplicationStackOverflowHook( xTaskHandle pxTask, signed char *pcTaskName )
000042  460a              MOV      r2,r1
;;;44     		{
;;;45     				printf("stack overflow %x %s\r\n", (unsigned int)pxTask, (portCHAR *)pcTaskName);
000044  4601              MOV      r1,r0
000046  a003              ADR      r0,|L1.84|
000048  f7fffffe          BL       __2printf
                  |L1.76|
;;;46     		 
;;;47     				for( ;; );
00004c  e7fe              B        |L1.76|
;;;48     		}
;;;49     		/*******************************************************************/
                          ENDP

                  vApplicationTickHook PROC
;;;50     		void vApplicationTickHook( void )
00004e  4770              BX       lr
;;;51     		{
;;;52     		}
;;;53     /*******************************************************************/
                          ENDP

                  |L1.80|
                          DCD      ||area_number.5||
                  |L1.84|
000054  73746163          DCB      "stack overflow %x %s\r\n",0
000058  6b206f76
00005c  6572666c
000060  6f772025
000064  78202573
000068  0d0a00  
00006b  00                DCB      0

                          AREA ||.data||, DATA, ALIGN=2

                  idle_counter
                          DCD      0x00000000

                          AREA ||area_number.5||, DATA, ALIGN=2

                          EXPORTAS ||area_number.5||, ||.data||
                  CPU_IDLE
000000  00000000          DCB      0x00,0x00,0x00,0x00
                  LastTick
                          DCD      0x00000000
                  count
                          DCD      0x00000000
                  max_count
                          DCD      0x000235b8

;*** Start embedded assembler ***

#line 1 "..\\hooks\\hooks.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___7_hooks_c_2344ff35____REV16|
#line 129 "C:\\Program Files\\keil\\ARM\\PACK\\ARM\\CMSIS\\3.20.4\\CMSIS\\Include\\core_cmInstr.h"
|__asm___7_hooks_c_2344ff35____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___7_hooks_c_2344ff35____REVSH|
#line 144
|__asm___7_hooks_c_2344ff35____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
