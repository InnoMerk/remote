; generated by Component: ARM Compiler 5.04 update 1 (build 49) Tool: ArmCC [5040049]
; commandline ArmCC [--c99 --list --debug -c --asm --interleave -o.\lcdtask.o --asm_dir=.\ --list_dir=.\ --depend=.\lcdtask.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\project -I..\CMSIS\CM3\CoreSupport -I..\hooks -I..\lcd -I..\led -I..\load_cpu -I..\main -I..\printf -I..\rtos -I..\STM32F10x_StdPeriph_Driver\inc -I..\STM32F10x_StdPeriph_Driver\src -I..\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\limit_switch -I..\control_task -I..\mode_task -I..\lcdTask -I..\hit -I..\move_task -I"C:\Program Files\keil\ARM\RV31\INC" -I"C:\Program Files\keil\ARM\PACK\ARM\CMSIS\3.20.4\CMSIS\Include" -I"C:\Program Files\keil\ARM\PACK\Keil\STM32F1xx_DFP\1.0.5\Device\Include" -DSTM32F10X_MD_VL -DUSE_STDPERIPH_DRIVER --omf_browse=.\lcdtask.crf ..\lcdTask\lcdTask.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  vLcdTask PROC
;;;3      
;;;4      void vLcdTask (void *pvParameters)
000000  b51f              PUSH     {r0-r4,lr}
;;;5      {
;;;6      	vTaskDelay(2000/ portTICK_PERIOD_MS) ;
000002  f44f60fa          MOV      r0,#0x7d0
000006  f7fffffe          BL       vTaskDelay
;;;7      	lcd_init();
00000a  f7fffffe          BL       lcd_init
;;;8      	
;;;9      	uint8_t lcdMode=0;
00000e  2000              MOVS     r0,#0
;;;10     	uint8_t lcdCPU=0;
;;;11     	uint8_t lcdLimit=0;
;;;12     	uint8_t lcdHit=0;
;;;13     	
;;;14     	for(;;)
;;;15     	{
;;;16     		if( xQueueReceive( xCPUloadLCD, &lcdCPU, ( TickType_t ) 10 ) )
000010  4c4e              LDR      r4,|L1.332|
000012  f88d0004          STRB     r0,[sp,#4]            ;9
000016  f88d0008          STRB     r0,[sp,#8]            ;10
00001a  f88d0000          STRB     r0,[sp,#0]            ;11
00001e  f88d000c          STRB     r0,[sp,#0xc]          ;12
                  |L1.34|
000022  2300              MOVS     r3,#0
000024  220a              MOVS     r2,#0xa
000026  a902              ADD      r1,sp,#8
000028  6820              LDR      r0,[r4,#0]  ; xCPUloadLCD
00002a  f7fffffe          BL       xQueueGenericReceive
00002e  2800              CMP      r0,#0
000030  d1f7              BNE      |L1.34|
;;;17         {
;;;18     			continue;	
;;;19     		}		
;;;20     		if( xQueueReceive( xModeQueueLCD, &lcdMode, ( TickType_t ) 10) )
000032  4847              LDR      r0,|L1.336|
000034  2300              MOVS     r3,#0
000036  220a              MOVS     r2,#0xa
000038  a901              ADD      r1,sp,#4
00003a  6800              LDR      r0,[r0,#0]  ; xModeQueueLCD
00003c  f7fffffe          BL       xQueueGenericReceive
000040  2800              CMP      r0,#0
000042  d1ee              BNE      |L1.34|
;;;21         {
;;;22           continue; 
;;;23         }
;;;24     		if( xQueueReceive( xLimiterQueueLCD, &lcdLimit, ( TickType_t )10 ) )
000044  4843              LDR      r0,|L1.340|
000046  2300              MOVS     r3,#0
000048  220a              MOVS     r2,#0xa
00004a  4669              MOV      r1,sp
00004c  6800              LDR      r0,[r0,#0]  ; xLimiterQueueLCD
00004e  f7fffffe          BL       xQueueGenericReceive
000052  2800              CMP      r0,#0
000054  d1e5              BNE      |L1.34|
;;;25         {
;;;26     			continue;  
;;;27         }
;;;28     		if( xQueueReceive( xHitQueueLCD, &lcdHit, ( TickType_t ) 10 ) )
000056  4840              LDR      r0,|L1.344|
000058  2300              MOVS     r3,#0
00005a  220a              MOVS     r2,#0xa
00005c  a903              ADD      r1,sp,#0xc
00005e  6800              LDR      r0,[r0,#0]  ; xHitQueueLCD
000060  f7fffffe          BL       xQueueGenericReceive
000064  2800              CMP      r0,#0
000066  d1dc              BNE      |L1.34|
;;;29         {
;;;30     			continue;  
;;;31         }
;;;32     		
;;;33     		lcd_clrscr();
000068  f7fffffe          BL       lcd_clrscr
;;;34     		lcd_goto(1,0);
00006c  2100              MOVS     r1,#0
00006e  2001              MOVS     r0,#1
000070  f7fffffe          BL       lcd_goto
;;;35     		lcd_itos(lcdCPU);
000074  f89d0008          LDRB     r0,[sp,#8]
000078  f7fffffe          BL       lcd_itos
;;;36     		lcd_putc('%');		
00007c  2025              MOVS     r0,#0x25
00007e  f7fffffe          BL       lcd_putc
;;;37     		lcd_goto(1,4);
000082  2104              MOVS     r1,#4
000084  2001              MOVS     r0,#1
000086  f7fffffe          BL       lcd_goto
;;;38     		if(lcdHit==SHOT){lcd_putc('*');}
00008a  f89d000c          LDRB     r0,[sp,#0xc]
00008e  280a              CMP      r0,#0xa
000090  d102              BNE      |L1.152|
000092  202a              MOVS     r0,#0x2a
000094  f7fffffe          BL       lcd_putc
                  |L1.152|
;;;39     		
;;;40     		switch (lcdMode)
000098  f89d0004          LDRB     r0,[sp,#4]
00009c  281e              CMP      r0,#0x1e
00009e  d025              BEQ      |L1.236|
0000a0  dc04              BGT      |L1.172|
0000a2  280a              CMP      r0,#0xa
0000a4  d00c              BEQ      |L1.192|
0000a6  2814              CMP      r0,#0x14
0000a8  d104              BNE      |L1.180|
0000aa  e00f              B        |L1.204|
                  |L1.172|
0000ac  2828              CMP      r0,#0x28
0000ae  d023              BEQ      |L1.248|
0000b0  2832              CMP      r0,#0x32
0000b2  d027              BEQ      |L1.260|
                  |L1.180|
;;;41     		{
;;;42     			
;;;43     			//--------------------
;;;44     			case WAITING_MODE:
;;;45     			{
;;;46     				lcd_goto(2,0);
;;;47     				lcd_puts("WAITING");
;;;48     			 
;;;49     				break;
;;;50     			}
;;;51     			//--------------------
;;;52     			case STATIC_MODE:
;;;53     			{
;;;54     				lcd_goto(2,0);
;;;55     				lcd_puts("STATIC");
;;;56     			
;;;57     				break;
;;;58     			}	
;;;59     			//--------------------
;;;60     			case RANDOM_MODE:
;;;61     			{			
;;;62     				lcd_goto(2,0);
;;;63     				lcd_puts("RANDOM");
;;;64     			
;;;65     				break;
;;;66     			}
;;;67     				//--------------------
;;;68     			case RADIOCONTROL_MODE:
;;;69     			{
;;;70     				lcd_goto(2,0);
;;;71     				lcd_puts("RADIO");
;;;72     				break;
;;;73     			}	
;;;74     			case TEST_MODE:
;;;75     			{
;;;76     				lcd_goto(2,0);
;;;77     				lcd_puts("TEST");
;;;78     			 
;;;79     				break;
;;;80     			}
;;;81     			//--------------------
;;;82     			default:
;;;83     			{	
;;;84     				lcd_goto(2,0);
0000b4  2100              MOVS     r1,#0
0000b6  2002              MOVS     r0,#2
0000b8  f7fffffe          BL       lcd_goto
;;;85     				lcd_puts("S.K.I.F.");
0000bc  a027              ADR      r0,|L1.348|
0000be  e00a              B        |L1.214|
                  |L1.192|
0000c0  2100              MOVS     r1,#0                 ;46
0000c2  2002              MOVS     r0,#2                 ;46
0000c4  f7fffffe          BL       lcd_goto
0000c8  a027              ADR      r0,|L1.360|
0000ca  e004              B        |L1.214|
                  |L1.204|
0000cc  2100              MOVS     r1,#0                 ;54
0000ce  2002              MOVS     r0,#2                 ;54
0000d0  f7fffffe          BL       lcd_goto
0000d4  a026              ADR      r0,|L1.368|
                  |L1.214|
0000d6  f7fffffe          BL       lcd_puts
;;;86     			}	
;;;87     			/**/
;;;88     		}
;;;89     		lcd_goto(1,7);
0000da  2107              MOVS     r1,#7
0000dc  2001              MOVS     r0,#1
0000de  f7fffffe          BL       lcd_goto
;;;90     		if(lcdLimit==UP){lcd_putc('i');}
0000e2  f89d0000          LDRB     r0,[sp,#0]
0000e6  280a              CMP      r0,#0xa
0000e8  d012              BEQ      |L1.272|
0000ea  e014              B        |L1.278|
                  |L1.236|
0000ec  2100              MOVS     r1,#0                 ;62
0000ee  2002              MOVS     r0,#2                 ;62
0000f0  f7fffffe          BL       lcd_goto
0000f4  a020              ADR      r0,|L1.376|
0000f6  e7ee              B        |L1.214|
                  |L1.248|
0000f8  2100              MOVS     r1,#0                 ;70
0000fa  2002              MOVS     r0,#2                 ;70
0000fc  f7fffffe          BL       lcd_goto
000100  a01f              ADR      r0,|L1.384|
000102  e7e8              B        |L1.214|
                  |L1.260|
000104  2100              MOVS     r1,#0                 ;76
000106  2002              MOVS     r0,#2                 ;76
000108  f7fffffe          BL       lcd_goto
00010c  a01e              ADR      r0,|L1.392|
00010e  e7e2              B        |L1.214|
                  |L1.272|
000110  2069              MOVS     r0,#0x69
000112  f7fffffe          BL       lcd_putc
                  |L1.278|
;;;91     		if(lcdLimit==UP_LIMIT){lcd_putc('+');}
000116  f89d0000          LDRB     r0,[sp,#0]
00011a  281e              CMP      r0,#0x1e
00011c  d102              BNE      |L1.292|
00011e  202b              MOVS     r0,#0x2b
000120  f7fffffe          BL       lcd_putc
                  |L1.292|
;;;92     		if(lcdLimit==DOWN_LIMIT){lcd_putc('-');}
000124  f89d0000          LDRB     r0,[sp,#0]
000128  2828              CMP      r0,#0x28
00012a  d102              BNE      |L1.306|
00012c  202d              MOVS     r0,#0x2d
00012e  f7fffffe          BL       lcd_putc
                  |L1.306|
;;;93     	  if(lcdLimit==DOWN){lcd_putc('!');}
000132  f89d0000          LDRB     r0,[sp,#0]
000136  2814              CMP      r0,#0x14
000138  d102              BNE      |L1.320|
00013a  2021              MOVS     r0,#0x21
00013c  f7fffffe          BL       lcd_putc
                  |L1.320|
;;;94     	
;;;95     		vTaskDelay(500/ portTICK_PERIOD_MS);
000140  f44f70fa          MOV      r0,#0x1f4
000144  f7fffffe          BL       vTaskDelay
000148  e76b              B        |L1.34|
;;;96     	}	//for
;;;97     	vTaskDelete(NULL);
;;;98     
;;;99     }
                          ENDP

00014a  0000              DCW      0x0000
                  |L1.332|
                          DCD      xCPUloadLCD
                  |L1.336|
                          DCD      xModeQueueLCD
                  |L1.340|
                          DCD      xLimiterQueueLCD
                  |L1.344|
                          DCD      xHitQueueLCD
                  |L1.348|
00015c  532e4b2e          DCB      "S.K.I.F.",0
000160  492e462e
000164  00      
000165  00                DCB      0
000166  00                DCB      0
000167  00                DCB      0
                  |L1.360|
000168  57414954          DCB      "WAITING",0
00016c  494e4700
                  |L1.368|
000170  53544154          DCB      "STATIC",0
000174  494300  
000177  00                DCB      0
                  |L1.376|
000178  52414e44          DCB      "RANDOM",0
00017c  4f4d00  
00017f  00                DCB      0
                  |L1.384|
000180  52414449          DCB      "RADIO",0
000184  4f00    
000186  00                DCB      0
000187  00                DCB      0
                  |L1.392|
000188  54455354          DCB      "TEST",0
00018c  00      
00018d  00                DCB      0
00018e  00                DCB      0
00018f  00                DCB      0
